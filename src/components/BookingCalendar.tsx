
import React, { useState } from 'react';
import { Calendar } from "@/components/ui/calendar";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { CalendarDays, Clock, MapPin, Phone, Mail, User } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

const BookingCalendar = () => {
  const [date, setDate] = useState<Date | undefined>(new Date());
  const [selectedTime, setSelectedTime] = useState<string>('');
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    serviceType: '',
    location: '',
    message: ''
  });
  const { toast } = useToast();

  const timeSlots = [
    '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00'
  ];

  const serviceTypes = [
    { id: 'wedding', name: '–°–≤–∞–¥–µ–±–Ω–∞—è —Å—ä–µ–º–∫–∞', duration: '8-10 —á–∞—Å–æ–≤', price: '–æ—Ç 80 000 ‚ÇΩ' },
    { id: 'lovestory', name: 'Love Story', duration: '2-3 —á–∞—Å–∞', price: '–æ—Ç 25 000 ‚ÇΩ' },
    { id: 'portrait', name: '–ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è —Å—ä–µ–º–∫–∞', duration: '1-2 —á–∞—Å–∞', price: '–æ—Ç 15 000 ‚ÇΩ' },
    { id: 'family', name: '–°–µ–º–µ–π–Ω–∞—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è', duration: '2-3 —á–∞—Å–∞', price: '–æ—Ç 20 000 ‚ÇΩ' },
    { id: 'corporate', name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Å—ä–µ–º–∫–∞', duration: '3-4 —á–∞—Å–∞', price: '–æ—Ç 30 000 ‚ÇΩ' }
  ];

  const popularLocations = [
    '–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ',
    '–¶–∞—Ä–∏—Ü—ã–Ω–æ',
    '–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å',
    '–°–æ–∫–æ–ª—å–Ω–∏–∫–∏',
    '–ö–æ–ª–æ–º–µ–Ω—Å–∫–æ–µ',
    '–°—Ç—É–¥–∏—è',
    '–î—Ä—É–≥–∞—è –ª–æ–∫–∞—Ü–∏—è'
  ];

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!date || !selectedTime || !formData.name || !formData.email || !formData.serviceType) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è",
        variant: "destructive"
      });
      return;
    }

    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    console.log('Booking data:', {
      date,
      time: selectedTime,
      ...formData
    });

    toast({
      title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
      description: "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏",
    });

    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    setFormData({
      name: '',
      email: '',
      phone: '',
      serviceType: '',
      location: '',
      message: ''
    });
    setSelectedTime('');
  };

  const selectedService = serviceTypes.find(s => s.id === formData.serviceType);

  return (
    <section id="booking" className="py-20 bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-bold text-gray-900 mb-4">–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—ä–µ–º–∫—É</h2>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –≤–∞—à–µ–π —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-12">
          {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∏ –≤—Ä–µ–º—è */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <CalendarDays className="h-5 w-5 text-rose-400" />
                <span>–í—ã–±–æ—Ä –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏</span>
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <Calendar
                mode="single"
                selected={date}
                onSelect={setDate}
                disabled={(date) => date < new Date() || date.getDay() === 0}
                className="rounded-md border"
              />
              
              {date && (
                <div>
                  <h4 className="font-medium mb-3 flex items-center space-x-2">
                    <Clock className="h-4 w-4 text-rose-400" />
                    <span>–î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è</span>
                  </h4>
                  <div className="grid grid-cols-3 gap-2">
                    {timeSlots.map((time) => (
                      <Button
                        key={time}
                        variant={selectedTime === time ? "default" : "outline"}
                        className={`text-sm ${selectedTime === time ? 'bg-rose-400 hover:bg-rose-500' : ''}`}
                        onClick={() => setSelectedTime(time)}
                      >
                        {time}
                      </Button>
                    ))}
                  </div>
                </div>
              )}
            </CardContent>
          </Card>

          {/* –§–æ—Ä–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <User className="h-5 w-5 text-rose-400" />
                <span>–î–µ—Ç–∞–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <form onSubmit={handleSubmit} className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="text-sm font-medium mb-2 block">–ò–º—è *</label>
                    <Input
                      value={formData.name}
                      onChange={(e) => setFormData({...formData, name: e.target.value})}
                      placeholder="–í–∞—à–µ –∏–º—è"
                      required
                    />
                  </div>
                  <div>
                    <label className="text-sm font-medium mb-2 block">Email *</label>
                    <Input
                      type="email"
                      value={formData.email}
                      onChange={(e) => setFormData({...formData, email: e.target.value})}
                      placeholder="your@email.com"
                      required
                    />
                  </div>
                </div>

                <div>
                  <label className="text-sm font-medium mb-2 block">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                  <Input
                    type="tel"
                    value={formData.phone}
                    onChange={(e) => setFormData({...formData, phone: e.target.value})}
                    placeholder="+7 (926) 256-35-50"
                  />
                </div>

                <div>
                  <label className="text-sm font-medium mb-2 block">–¢–∏–ø —Å—ä–µ–º–∫–∏ *</label>
                  <Select value={formData.serviceType} onValueChange={(value) => setFormData({...formData, serviceType: value})}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—ä–µ–º–∫–∏" />
                    </SelectTrigger>
                    <SelectContent>
                      {serviceTypes.map((service) => (
                        <SelectItem key={service.id} value={service.id}>
                          <div className="flex flex-col">
                            <span>{service.name}</span>
                            <span className="text-xs text-gray-500">{service.duration} ‚Ä¢ {service.price}</span>
                          </div>
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                {selectedService && (
                  <div className="bg-rose-50 p-4 rounded-lg">
                    <h4 className="font-medium text-rose-800 mb-2">{selectedService.name}</h4>
                    <div className="flex items-center space-x-4 text-sm text-rose-600">
                      <span>‚è± {selectedService.duration}</span>
                      <span>üí∞ {selectedService.price}</span>
                    </div>
                  </div>
                )}

                <div>
                  <label className="text-sm font-medium mb-2 block">–õ–æ–∫–∞—Ü–∏—è</label>
                  <Select value={formData.location} onValueChange={(value) => setFormData({...formData, location: value})}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é" />
                    </SelectTrigger>
                    <SelectContent>
                      {popularLocations.map((location) => (
                        <SelectItem key={location} value={location}>
                          {location}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <label className="text-sm font-medium mb-2 block">–°–æ–æ–±—â–µ–Ω–∏–µ</label>
                  <Textarea
                    value={formData.message}
                    onChange={(e) => setFormData({...formData, message: e.target.value})}
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö –∫ —Å—ä–µ–º–∫–µ..."
                    rows={3}
                  />
                </div>

                {date && selectedTime && (
                  <div className="bg-gray-50 p-4 rounded-lg">
                    <h4 className="font-medium mb-2">–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</h4>
                    <div className="flex items-center space-x-4 text-sm text-gray-600">
                      <span>üìÖ {date.toLocaleDateString('ru-RU')}</span>
                      <span>üïê {selectedTime}</span>
                    </div>
                  </div>
                )}

                <Button 
                  type="submit" 
                  className="w-full bg-rose-400 hover:bg-rose-500 text-white py-3"
                  disabled={!date || !selectedTime || !formData.name || !formData.email || !formData.serviceType}
                >
                  –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—ä–µ–º–∫—É
                </Button>
              </form>
            </CardContent>
          </Card>
        </div>

        {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-16 text-center">
          <div className="bg-white rounded-2xl p-8 shadow-lg max-w-4xl mx-auto">
            <h3 className="text-2xl font-bold mb-6">–ò–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é</h3>
            <div className="grid md:grid-cols-3 gap-6">
              <div className="flex items-center justify-center space-x-3">
                <Phone className="h-5 w-5 text-rose-400" />
                <div>
                  <p className="font-medium">–¢–µ–ª–µ—Ñ–æ–Ω</p>
                  <p className="text-gray-600">+7 (926) 256-35-50</p>
                </div>
              </div>
              <div className="flex items-center justify-center space-x-3">
                <Mail className="h-5 w-5 text-rose-400" />
                <div>
                  <p className="font-medium">Email</p>
                  <p className="text-gray-600">Bagreshevafoto@gmail.com</p>
                </div>
              </div>
              <div className="flex items-center justify-center space-x-3">
                <MapPin className="h-5 w-5 text-rose-400" />
                <div>
                  <p className="font-medium">–õ–æ–∫–∞—Ü–∏—è</p>
                  <p className="text-gray-600">–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default BookingCalendar;
