
import React, { useState } from 'react';
import { MapPin, Clock, Sun, Snowflake, Flower, Leaf } from 'lucide-react';
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { useLocations, useLocationCategories } from '@/hooks/useLocations';
import OptimizedImage from './OptimizedImage';

const LocationsSection = () => {
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const { data: locations } = useLocations();
  const { data: categories } = useLocationCategories();

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const mockLocations = [
    {
      id: '1',
      name: '–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ',
      description: '–û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–∞—Ä–∫–æ–≤ –ú–æ—Å–∫–≤—ã —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∞–ª–ª–µ—è–º–∏ –∏ –≤–∏–¥–∞–º–∏ –Ω–∞ –ú–æ—Å–∫–≤—É-—Ä–µ–∫—É',
      image_url: 'https://images.unsplash.com/photo-1426604966848-d7adac402bff?w=800&h=600&fit=crop',
      address: '—É–ª. –ö—Ä—ã–º—Å–∫–∏–π –í–∞–ª, 9',
      best_time: '–£—Ç—Ä–æ–º –¥–æ 11:00 –∏–ª–∏ –ø–æ—Å–ª–µ 16:00',
      indoor: false,
      location_categories: { name: '–ü–∞—Ä–∫–∏', description: '–ü–∞—Ä–∫–∏ –∏ —Å–∫–≤–µ—Ä—ã –ú–æ—Å–∫–≤—ã' }
    },
    {
      id: '2',
      name: '–¶–∞—Ä–∏—Ü—ã–Ω–æ',
      description: '–î–≤–æ—Ä—Ü–æ–≤–æ-–ø–∞—Ä–∫–æ–≤—ã–π –∞–Ω—Å–∞–º–±–ª—å —Å –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π',
      image_url: 'https://images.unsplash.com/photo-1501854140801-50d01698950b?w=800&h=600&fit=crop',
      address: '—É–ª. –î–æ–ª—å—Å–∫–∞—è, 1',
      best_time: '–ó–æ–ª–æ—Ç–æ–π —á–∞—Å –∏ –≥–æ–ª—É–±–æ–π —á–∞—Å',
      indoor: false,
      location_categories: { name: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞', description: '–ú—É–∑–µ–∏, —É—Å–∞–¥—å–±—ã –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–æ–∫–∞—Ü–∏–∏' }
    },
    {
      id: '3',
      name: '–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å',
      description: '–ì–ª–∞–≤–Ω–∞—è –ø–ª–æ—â–∞–¥—å –†–æ—Å—Å–∏–∏ —Å –≤–∏–¥–æ–º –Ω–∞ –ö—Ä–µ–º–ª—å',
      image_url: 'https://images.unsplash.com/photo-1470071459604-3b5ec3a7fe05?w=800&h=600&fit=crop',
      address: '–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å',
      best_time: '–†–∞–Ω–Ω–µ–µ —É—Ç—Ä–æ –¥–æ 8:00',
      indoor: false,
      location_categories: { name: '–ì–æ—Ä–æ–¥—Å–∫–∏–µ', description: '–£–ª–∏—Ü—ã, –ø–ª–æ—â–∞–¥–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≥–æ—Ä–æ–¥–∞' }
    },
    {
      id: '4',
      name: '–°–æ–∫–æ–ª—å–Ω–∏–∫–∏',
      description: '–ë–æ–ª—å—à–æ–π –ø–∞—Ä–∫ —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –ª–æ–∫–∞—Ü–∏—è–º–∏: –∞–ª–ª–µ–∏, –ø—Ä—É–¥—ã, –±–µ—Å–µ–¥–∫–∏',
      image_url: 'https://images.unsplash.com/photo-1500673922987-e212871fec22?w=800&h=600&fit=crop',
      address: '–°–æ–∫–æ–ª—å–Ω–∏—á–µ—Å–∫–∏–π –í–∞–ª, 1',
      best_time: '–í –ª—é–±–æ–µ –≤—Ä–µ–º—è –¥–Ω—è',
      indoor: false,
      location_categories: { name: '–ü–∞—Ä–∫–∏', description: '–ü–∞—Ä–∫–∏ –∏ —Å–∫–≤–µ—Ä—ã –ú–æ—Å–∫–≤—ã' }
    },
    {
      id: '5',
      name: '–ö–æ–ª–æ–º–µ–Ω—Å–∫–æ–µ',
      description: '–ú—É–∑–µ–π-–∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫ —Å –¥—Ä–µ–≤–Ω–∏–º–∏ —Ö—Ä–∞–º–∞–º–∏ –∏ —Å–∞–¥–∞–º–∏',
      image_url: 'https://images.unsplash.com/photo-1433086966358-54859d0ed716?w=800&h=600&fit=crop',
      address: '–ê–Ω–¥—Ä–æ–ø–æ–≤–∞ –ø—Ä-—Ç, 39',
      best_time: '–í–µ—Å—å –¥–µ–Ω—å, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ —Ä–∞—Å—Å–≤–µ—Ç–µ',
      indoor: false,
      location_categories: { name: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞', description: '–ú—É–∑–µ–∏, —É—Å–∞–¥—å–±—ã –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–æ–∫–∞—Ü–∏–∏' }
    },
    {
      id: '6',
      name: '–§–æ—Ç–æ—Å—Ç—É–¥–∏—è "–ë–µ–ª—ã–π –∑–∞–ª"',
      description: '–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è —Å—Ç—É–¥–∏—è —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º —Å–≤–µ—Ç–æ–º',
      image_url: 'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=800&h=600&fit=crop',
      address: '—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 15',
      best_time: '–í –ª—é–±–æ–µ –≤—Ä–µ–º—è',
      indoor: true,
      location_categories: { name: '–°—Ç—É–¥–∏–π–Ω—ã–µ', description: '–ó–∞–∫—Ä—ã—Ç—ã–µ —Å—Ç—É–¥–∏–π–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞' }
    },
    {
      id: '7',
      name: '–ò–∑–º–∞–π–ª–æ–≤—Å–∫–∏–π –ø–∞—Ä–∫',
      description: '–û–≥—Ä–æ–º–Ω–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è —Å –ª–µ—Å–Ω—ã–º–∏ –¥–æ—Ä–æ–∂–∫–∞–º–∏ –∏ –ø—Ä—É–¥–∞–º–∏',
      image_url: 'https://images.unsplash.com/photo-1518837695005-2083093ee35b?w=800&h=600&fit=crop',
      address: '–ò–∑–º–∞–π–ª–æ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, 73–ñ',
      best_time: '–ó–æ–ª–æ—Ç–æ–π —á–∞—Å',
      indoor: false,
      location_categories: { name: '–ü–∞—Ä–∫–∏', description: '–ü–∞—Ä–∫–∏ –∏ —Å–∫–≤–µ—Ä—ã –ú–æ—Å–∫–≤—ã' }
    },
    {
      id: '8',
      name: '–ê—Ä–±–∞—Ç',
      description: '–ü–µ—à–µ—Ö–æ–¥–Ω–∞—è —É–ª–∏—Ü–∞ —Å —É–ª–∏—á–Ω—ã–º–∏ –∞—Ä—Ç–∏—Å—Ç–∞–º–∏ –∏ –∫–∞—Ñ–µ',
      image_url: 'https://images.unsplash.com/photo-1520637836862-4d197d17c32a?w=800&h=600&fit=crop',
      address: '—É–ª. –ê—Ä–±–∞—Ç',
      best_time: '–í–µ—á–µ—Ä–æ–º –ø–æ—Å–ª–µ 18:00',
      indoor: false,
      location_categories: { name: '–ì–æ—Ä–æ–¥—Å–∫–∏–µ', description: '–£–ª–∏—Ü—ã, –ø–ª–æ—â–∞–¥–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≥–æ—Ä–æ–¥–∞' }
    },
    {
      id: '9',
      name: '–í–æ—Ä–æ–±—å–µ–≤—ã –≥–æ—Ä—ã',
      description: '–°–º–æ—Ç—Ä–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ —Å –≤–∏–¥–æ–º –Ω–∞ –≥–æ—Ä–æ–¥',
      image_url: 'https://images.unsplash.com/photo-1516483638261-f4dbaf036963?w=800&h=600&fit=crop',
      address: '–í–æ—Ä–æ–±—å–µ–≤—ã –≥–æ—Ä—ã',
      best_time: '–ù–∞ –∑–∞–∫–∞—Ç–µ',
      indoor: false,
      location_categories: { name: '–ö—Ä—ã—à–∏', description: '–ü–∞–Ω–æ—Ä–∞–º–Ω—ã–µ –≤–∏–¥—ã' }
    },
    {
      id: '10',
      name: '–õ–æ—Ñ—Ç-—Å—Ç—É–¥–∏—è "–ò–Ω–¥—É—Å—Ç—Ä–∏—è"',
      description: '–°—Ç–∏–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ',
      image_url: 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=800&h=600&fit=crop',
      address: '—É–ª. –ë–∞—É–º–∞–Ω—Å–∫–∞—è, 43',
      best_time: '–í –ª—é–±–æ–µ –≤—Ä–µ–º—è',
      indoor: true,
      location_categories: { name: '–°—Ç—É–¥–∏–π–Ω—ã–µ', description: '–ó–∞–∫—Ä—ã—Ç—ã–µ —Å—Ç—É–¥–∏–π–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞' }
    }
  ];

  const seasons = [
    { id: 'all', name: '–í—Å–µ', icon: MapPin, color: 'text-gray-500' },
    { id: '–ü–∞—Ä–∫–∏', name: '–ü–∞—Ä–∫–∏', icon: Flower, color: 'text-green-500' },
    { id: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞', name: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ', icon: Sun, color: 'text-yellow-500' },
    { id: '–ì–æ—Ä–æ–¥—Å–∫–∏–µ', name: '–ì–æ—Ä–æ–¥—Å–∫–∏–µ', icon: Leaf, color: 'text-orange-500' },
    { id: '–°—Ç—É–¥–∏–π–Ω—ã–µ', name: '–°—Ç—É–¥–∏–∏', icon: Snowflake, color: 'text-blue-500' }
  ];

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const displayLocations = locations && locations.length > 0 ? locations : mockLocations;

  const filteredLocations = selectedCategory === 'all' 
    ? displayLocations 
    : displayLocations?.filter(location => 
        location.location_categories?.name?.toLowerCase().includes(selectedCategory.toLowerCase())
      );

  return (
    <section className="py-20 bg-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-4xl font-bold text-gray-900 mb-4">–õ–æ–∫–∞—Ü–∏–∏ –¥–ª—è —Å—ä–µ–º–∫–∏</h2>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –°–∞–º—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ –º–µ—Å—Ç–∞ –ú–æ—Å–∫–≤—ã –∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –≤–∞—à–µ–π —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏
          </p>
        </div>

        {/* –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
        <div className="flex flex-wrap justify-center gap-4 mb-12">
          {seasons.map((season) => {
            const IconComponent = season.icon;
            return (
              <button
                key={season.id}
                onClick={() => setSelectedCategory(season.id)}
                className={`flex items-center space-x-2 px-6 py-3 rounded-full transition-all duration-300 ${
                  selectedCategory === season.id
                    ? 'bg-rose-400 text-white shadow-lg scale-105'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                <IconComponent className={`h-5 w-5 ${selectedCategory === season.id ? 'text-white' : season.color}`} />
                <span className="font-medium">{season.name}</span>
              </button>
            );
          })}
        </div>

        {/* –õ–æ–∫–∞—Ü–∏–∏ */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredLocations?.map((location) => (
            <Card key={location.id} className="overflow-hidden hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
              <div className="relative h-64">
                <OptimizedImage
                  src={location.image_url}
                  alt={location.name}
                  className="w-full h-full object-cover"
                  width={600}
                  height={400}
                />
                {location.best_time && (
                  <div className="absolute top-4 right-4">
                    <Badge className="bg-white/90 text-gray-900">
                      <Clock className="h-3 w-3 mr-1" />
                      {location.best_time}
                    </Badge>
                  </div>
                )}
              </div>
              
              <CardContent className="p-6">
                <div className="flex items-start justify-between mb-3">
                  <h3 className="text-xl font-bold">{location.name}</h3>
                  <MapPin className="h-5 w-5 text-rose-400 flex-shrink-0 mt-1" />
                </div>
                
                <p className="text-gray-600 mb-4">{location.description}</p>
                
                {location.address && (
                  <p className="text-sm text-gray-500 mb-2">üìç {location.address}</p>
                )}
                
                <div className="flex flex-wrap gap-2 mb-4">
                  {location.location_categories && (
                    <Badge variant="secondary" className="text-xs">
                      {location.location_categories.name}
                    </Badge>
                  )}
                  {location.indoor && (
                    <Badge variant="outline" className="text-xs">
                      –ó–∞–∫—Ä—ã—Ç–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ
                    </Badge>
                  )}
                </div>

                <Button 
                  className="w-full bg-rose-400 hover:bg-rose-500 text-white"
                  onClick={() => {
                    const bookingElement = document.querySelector('#booking') as HTMLElement;
                    if (bookingElement) {
                      window.scrollTo({ top: bookingElement.offsetTop, behavior: 'smooth' });
                    }
                  }}
                >
                  –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—ä–µ–º–∫—É
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        {(!filteredLocations || filteredLocations.length === 0) && (
          <div className="text-center py-12">
            <p className="text-gray-500 text-lg">–õ–æ–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          </div>
        )}

        <div className="mt-16 text-center">
          <div className="bg-gradient-to-r from-rose-50 to-pink-50 rounded-2xl p-8">
            <h3 className="text-2xl font-bold mb-4">–ù–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ª–æ–∫–∞—Ü–∏—é?</h3>
            <p className="text-gray-600 mb-6">
              –£ –Ω–∞—Å –µ—Å—Ç—å –µ—â–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –º–µ—Å—Ç –¥–ª—è –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã—Ö —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–π
            </p>
            <Button className="bg-rose-400 text-white px-8 py-3 rounded-full hover:bg-rose-500 transition-colors">
              –û–±—Å—É–¥–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é
            </Button>
          </div>
        </div>
      </div>
    </section>
  );
};

export default LocationsSection;
